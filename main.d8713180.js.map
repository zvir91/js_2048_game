{"version":3,"sources":["scripts/main.js"],"names":["board","gameField","document","querySelector","gameScore","start","restart","createElement","rows","columns","score","setGame","r","c","num","title","className","id","toString","updateClass","append","setTwo","hasEmptyTile","found","Math","floor","random","chooseValue","getElementById","innerText","classList","value","hasSimiliarTile","row","i","length","e","remove","addEventListener","target","add","querySelectorAll","forEach","el","isPressed","ArrowLeft","ArrowRight","ArrowUp","ArrowDown","isFirstPressed","key","Object","values","some","obj","hasOwnProperty","deleteZero","filter","slide","changeRow","push","slideLeft","slideRight","reverse","slideUp","slideDown","code","textContent"],"mappings":"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","file":"main.d8713180.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst gameField = document.querySelector('.game-field');\nconst gameScore = document.querySelector('.game-score');\nconst start = document.querySelector('.start');\nconst restart = document.createElement('button');\n\nconst rows = 4;\nconst columns = 4;\nlet board;\nlet score = 0;\n\ndocument.addEventListener('click', e => {\n  if (e.target === start) {\n    setGame();\n\n    document.querySelector('.message-start').classList.add('hidden');\n    document.querySelector('.button').classList.add('hidden');\n  }\n\n  if (e.target === restart) {\n    const deleteFields = document.querySelectorAll('.field-cell');\n\n    deleteFields.forEach(el => el.remove());\n\n    document.querySelector('.message-lose').classList.add('hidden');\n\n    setGame();\n  }\n});\n\nfunction setGame() {\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const num = board[r][c];\n\n      let title = document.createElement('div');\n\n      title.className = 'field-cell';\n\n      title.id = r.toString() + '-' + c.toString();\n\n      title = updateClass(title, num);\n\n      gameField.append(title);\n    }\n  }\n\n  setTwo();\n  setTwo();\n}\n\nfunction setTwo() {\n  if (!hasEmptyTile()) {\n    return;\n  }\n\n  let found = false;\n\n  while (!found) {\n    const r = Math.floor(Math.random() * rows);\n    const c = Math.floor(Math.random() * columns);\n\n    if (board[r][c] === 0) {\n      const chooseValue = Math.random() < 0.1 ? 4 : 2;\n\n      board[r][c] = chooseValue;\n\n      const title = document.getElementById(r.toString() + '-' + c.toString());\n\n      title.innerText = chooseValue;\n      title.classList.value += ` field-cell--${chooseValue}`;\n\n      found = true;\n    }\n  }\n}\n\nfunction hasEmptyTile() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction hasSimiliarTile() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns - 1; c++) {\n      if (board[r][c] === board[r][c + 1]) {\n        return true;\n      }\n    }\n\n    for (let c = 0; c < columns; c++) {\n      const row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n      for (let i = 0; i < row.length - 1; i++) {\n        if (row[i] === row[i + 1]) {\n          return true;\n        }\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction updateClass(title, num, e) {\n  title.innerText = '';\n  title.className = '';\n\n  title.className = 'field-cell';\n  title.classList.value += (` field-cell--${num}`);\n\n  if (num > 0) {\n    title.innerText = num;\n  }\n\n  if (num === 2048) {\n    const win = document.querySelector('.message-win');\n\n    win.classList.remove('hidden');\n  } else if (!hasEmptyTile() && !hasSimiliarTile()) {\n    const lose = document.querySelector('.message-lose');\n\n    lose.classList.remove('hidden');\n  }\n\n  return title;\n}\n\nconst isPressed = {\n  ArrowLeft: false,\n  ArrowRight: false,\n  ArrowUp: false,\n  ArrowDown: false,\n};\n\nfunction isFirstPressed(e) {\n  const key = e.key;\n\n  if (Object.values(isPressed).some(obj => obj === true)) {\n    return;\n  }\n\n  if (isPressed.hasOwnProperty(key)) {\n    document.querySelector('.controls').append(restart);\n\n    restart.innerText = 'restart';\n    restart.classList = 'button restart';\n\n    isPressed[key] = true;\n  }\n}\n\ndocument.addEventListener('keydown', e => {\n  isFirstPressed(e);\n\n  if (e.code === 'ArrowLeft') {\n    slideLeft();\n    setTwo();\n  } else if (e.code === 'ArrowRight') {\n    slideRight();\n    setTwo();\n  } else if (e.code === 'ArrowUp') {\n    slideUp();\n    setTwo();\n  } else if (e.code === 'ArrowDown') {\n    slideDown();\n    setTwo();\n  }\n\n  gameScore.textContent = score;\n}\n);\n\nfunction deleteZero(row) {\n  return row.filter(num => num !== 0);\n};\n\nfunction slide(row) {\n  let changeRow = row;\n\n  changeRow = deleteZero(changeRow);\n\n  for (let r = 0; r < changeRow.length - 1; r++) {\n    if (changeRow[r] === changeRow[r + 1]) {\n      changeRow[r] *= 2;\n      changeRow[r + 1] = 0;\n\n      score += changeRow[r];\n    }\n  }\n\n  changeRow = deleteZero(changeRow);\n\n  while (changeRow.length < columns) {\n    changeRow.push(0);\n  }\n\n  return changeRow;\n}\n\nfunction slideLeft() {\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n\n    row = slide(row);\n    board[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const title = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateClass(title, num);\n    }\n  }\n}\n\nfunction slideRight() {\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n\n    row.reverse();\n    row = slide(row);\n\n    row.reverse();\n    board[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      const title = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateClass(title, num);\n    }\n  }\n}\n\nfunction slideUp() {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row = slide(row);\n\n    for (let r = 0; r < rows; r++) {\n      board[r][c] = row[r];\n\n      const title = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateClass(title, num);\n    }\n  }\n}\n\nfunction slideDown() {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row.reverse();\n\n    row = slide(row);\n\n    row.reverse();\n\n    for (let r = 0; r < rows; r++) {\n      const title = document.getElementById(r.toString() + '-' + c.toString());\n\n      board[r][c] = row[r];\n\n      const num = board[r][c];\n\n      updateClass(title, num);\n    }\n  }\n};\n"]}